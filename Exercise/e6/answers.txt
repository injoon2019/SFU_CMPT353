1. In the A/B test analysis, do you feel like we're p-hacking? How comfortable are you coming to a conclusion at p < 0.05?
	-> No, because p-hacking means "misuse of data analysis to find patterns in data that can be presented as statistically significant" (adapted from https://en.wikipedia.org/wiki/Data_dredging)
	   So we can think comfortably, in this analysis, we just used p-value to know there is a difference between new interface and old interface. Instructors showed meaningful result that searches more in new interface.

2.If we had done T-tests between each pair of sorting implementation results, how many tests would we run? 
If we looked for  in them, what would the probability be of having any false conclusions, just by chance? 
That's the effective p-value of the many-T-tests analysis. 
[We could have done a Bonferroni correction when doing multiple T-tests, which is a fancy way of saying “for  tests, look for significance at ”.]

-> we need 7C2 (= 21) tests. The probability be of having any false conclusion = (1 - probability of having all correct result) = (1 - 0.95^21)   

3. Give a ranking of the sorting implementations by speed, including which ones could not be distinguished. (i.e. which pairs could our experiment not conclude had different running times?)

1.partition_sort    0.040767
2.qs1               0.056874
3.qs4               0.080648
4.qs2               0.082094
5.qs5               0.082722
6.qs3               0.084064
7.merge1            0.084903

    group1         group2     meandiff p-adj   lower   upper  reject
--------------------------------------------------------------------
        merge1 partition_sort  -0.0441  0.001 -0.0507 -0.0376   True
        merge1            qs1   -0.028  0.001 -0.0346 -0.0215   True
        merge1            qs2  -0.0028    0.9 -0.0094  0.0037  False
        merge1            qs3  -0.0008    0.9 -0.0074  0.0057  False
        merge1            qs4  -0.0043 0.8842 -0.0108  0.0023  False
        merge1            qs5  -0.0022    0.9 -0.0087  0.0044  False
partition_sort            qs1   0.0161  0.001  0.0096  0.0227   True
partition_sort            qs2   0.0413  0.001  0.0348  0.0479   True
partition_sort            qs3   0.0433  0.001  0.0367  0.0498   True
partition_sort            qs4   0.0399  0.001  0.0333  0.0464   True
partition_sort            qs5    0.042  0.001  0.0354  0.0485   True
           qs1            qs2   0.0252  0.001  0.0187  0.0318   True
           qs1            qs3   0.0272  0.001  0.0206  0.0337   True
           qs1            qs4   0.0238  0.001  0.0172  0.0303   True
           qs1            qs5   0.0258  0.001  0.0193  0.0324   True
           qs2            qs3    0.002    0.9 -0.0046  0.0085  False
           qs2            qs4  -0.0014    0.9  -0.008  0.0051  False
           qs2            qs5   0.0006    0.9 -0.0059  0.0072  False
           qs3            qs4  -0.0034    0.9   -0.01  0.0031  False
           qs3            qs5  -0.0013    0.9 -0.0079  0.0052  False
           qs4            qs5   0.0021    0.9 -0.0045  0.0086  False

